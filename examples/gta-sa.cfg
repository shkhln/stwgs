// GTA: San Andreas config for Steam Controller

//TODO: skip key (Y in car)
//TODO: saving a game often triggers gun fire (both actions are performed with the left mouse button)
//TODO: better sniper rifle aim

def rad(deg) = deg * 3.14159265358979323846264338327950288 / 180.0;

let joy  = merge(input(JoyX ), input(JoyY ));
let lpad = merge(input(LPadX), input(LPadY));
let rpad = merge(input(RPadX), input(RPadY));

def dpad_button(pad, direction) =
  pad.as_ring_sector_button(
    direction    = rad(direction),
    angle        = rad(120)/*deg*/,
    inner_radius = 0.25,
    outer_radius = 1.2,
    margin       = 0.1);

let sensitivity = knob("touchpad sensitivity", 0.3, min_value = 0.1, max_value = 1.0);
let smoothing   = 8.0;

def pad_as_mouse(pad, t) = {
  let x, y = split(pad);
  x.scale( 1920 * sensitivity).relative(t).smooth(smoothing).bind(Ms.X),
  y.scale(-1080 * sensitivity).relative(t).smooth(smoothing).bind(Ms.Y)
};

let ltrig = input(LTrig).as_line_segment_button(from = 0.15, to = 1.0, margin = 0.1);
let rtrig = input(RTrig).as_line_segment_button(from = 0.15, to = 1.0, margin = 0.1);

layer menu {

  pad_as_mouse(rpad, input(RPadTouch)),

  input(Back ).bind(Kb.Esc),
  input(Start).bind(Kb.Enter),

  input(LGrip).bind(Kb.Space),
  input(LPadPress).bind(Kb.Space),
  input(Y).bind(Kb.F),

  dpad_button(lpad,  90/*deg*/).bind(Kb.Up),
  dpad_button(lpad, 180/*deg*/).bind(Kb.Left),
  dpad_button(lpad, -90/*deg*/).bind(Kb.Down),
  dpad_button(lpad,   0/*deg*/).bind(Kb.Right),

  // map zoom
  {
    let freq = joy.distance_from_center().scale(10);
    dpad_button(joy,  90/*deg*/).pulse(freq, 0.5).as_axis(value =  1, repeat = false).bind(Ms.Wheel),
    dpad_button(joy, -90/*deg*/).pulse(freq, 0.5).as_axis(value = -1, repeat = false).bind(Ms.Wheel)
  },

  dpad_button(joy, 180/*deg*/).bind(Kb.Z),
  dpad_button(joy,   0/*deg*/).bind(Kb.L)
},

layer walk {

  let ltrig_inverted = ltrig.invert();

  input(LPadPress).bind(Kb.Shift),
  input(RPadPress).bind(Kb.C),
  input(LGrip)    .bind(Kb.Space),
  input(RGrip)    .bind(Kb.Alt),

  dpad_button(lpad,  90/*deg*/).bind(Kb.W),
  dpad_button(lpad, 180/*deg*/).bind(Kb.A),
  dpad_button(lpad, -90/*deg*/).bind(Kb.S),
  dpad_button(lpad,   0/*deg*/).bind(Kb.D),

  dpad_button(joy,  90/*deg*/).gate(ltrig_inverted).bind(Kb.Y),
  dpad_button(joy, 180/*deg*/).bind(Kb.Tab),
  dpad_button(joy, -90/*deg*/).gate(ltrig_inverted).bind(Kb.N),
  dpad_button(joy,   0/*deg*/).bind(Kb.G),

  // sniper rifle zoom
  {
    let freq = joy.distance_from_center().scale(15);
    dpad_button(joy,  90/*deg*/).gate(ltrig).pulse(freq, 0.5).as_axis(value =  1, repeat = false).bind(Ms.Wheel),
    dpad_button(joy, -90/*deg*/).gate(ltrig).pulse(freq, 0.5).as_axis(value = -1, repeat = false).bind(Ms.Wheel)
  }
},

layer menu | walk {
  ltrig.bind(Ms.RB),
  rtrig.bind(Ms.LB)
},

layer ride {

  dpad_button(lpad,  90/*deg*/).bind(Kb.Up),
  dpad_button(lpad, 180/*deg*/).bind(Kb.A),
  dpad_button(lpad, -90/*deg*/).bind(Kb.Down),
  dpad_button(lpad,   0/*deg*/).bind(Kb.D),

  dpad_button(joy, 180/*deg*/).bind(Kb.KP4),
  dpad_button(joy, -90/*deg*/).bind(Kb.KP8),
  dpad_button(joy,   0/*deg*/).bind(Kb.KP6),
  dpad_button(joy,  90/*deg*/).bind(Kb.KP2),

  input(X).bind(Kb.H)
},

layer heli {

  let pulse_width = lpad.distance_from_center().scale(0.8);

  dpad_button(lpad,  90/*deg*/).pulse(20, pulse_width).bind(Kb.Up),
  dpad_button(lpad, 180/*deg*/).bind(Kb.Q),
  dpad_button(lpad, -90/*deg*/).pulse(20, pulse_width).bind(Kb.Down),
  dpad_button(lpad,   0/*deg*/).bind(Kb.E),

  dpad_button(joy, 180/*deg*/).bind(Kb.A),
  dpad_button(joy,   0/*deg*/).bind(Kb.D)
},

layer plane {

  dpad_button(lpad,  90/*deg*/).bind(Kb.Up),
  dpad_button(lpad, 180/*deg*/).bind(Kb.A),
  dpad_button(lpad, -90/*deg*/).bind(Kb.Down),
  dpad_button(lpad,   0/*deg*/).bind(Kb.D),

  dpad_button(joy, 180/*deg*/).bind(Kb.Q),
  dpad_button(joy,   0/*deg*/).bind(Kb.E)
},

layer ride | heli | plane {
  ltrig.bind(Kb.S),
  rtrig.bind(Kb.W),
  input(LPadPress).bind(Kb.Space),
  input(RPadPress).bind(Kb.Ctrl),
  input(RGrip)    .bind(Ms.LB),
  input(LGrip)    .bind(Kb._2)
},

layer walk | ride | heli | plane {

  pad_as_mouse(rpad, input(RPadTouch)),

  input(Yaw  ).gate(input(RPadTouch)).scale(-10).bind(Ms.X),
  input(Roll ).gate(input(RPadTouch)).scale(-15).bind(Ms.X),
  input(Pitch).gate(input(RPadTouch)).scale(-10).bind(Ms.Y),

  input(Back ).bind(Kb.Esc),
  input(Start).bind(Kb.Enter),

  input(Y).bind(Kb.F),
  input(A).as_axis(value = -1, repeat = false).bind(Ms.Wheel),
  input(B).as_axis(value =  1, repeat = false).bind(Ms.Wheel),

  input(LBump).bind(Kb.Q),
  input(RBump).bind(Kb.E),

  input(LStickPress).bind(Kb.V)
},

probe("menu") .set_mode(menu),
probe("walk") .set_mode(walk),
probe("ride") .set_mode(ride),
probe("heli") .set_mode(heli),
probe("plane").set_mode(plane)
